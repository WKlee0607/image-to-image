name: "171_304 to 193 (Fast-DDPM)"

data:
  ext: npy
  image_size: 1024
  train:
    input_dir: /home/mgj/workspace/mgjeon/image-to-image/data/sdo/aia_dataset/train/input
    target_dir: /home/mgj/workspace/mgjeon/image-to-image/data/sdo/aia_dataset/train/target
    batch_size: 1
    shuffle: true
    num_workers: 0
    pin_memory: true
    drop_last: true
  val:
    input_dir: /home/mgj/workspace/mgjeon/image-to-image/data/sdo/aia_dataset/val/input
    target_dir: /home/mgj/workspace/mgjeon/image-to-image/data/sdo/aia_dataset/val/target
    batch_size: 1
    shuffle: false
    num_workers: 0
    pin_memory: false
    drop_last: false
  test:
    input_dir: /home/mgj/workspace/mgjeon/image-to-image/data/sdo/aia_dataset/test/input
    target_dir: /home/mgj/workspace/mgjeon/image-to-image/data/sdo/aia_dataset/test/target
    batch_size: 1
    shuffle: false
    num_workers: 0
    pin_memory: false
    drop_last: false

model:
  name: simple
  args:
    input_nc: 3     # channel of input image (condition)
    output_nc: 1    # channel of target image = channel of noise
    n_feat: 32

params:
  model:
    ema: True
    ema_rate: 0.999
  diffusion:  
    beta_schedule: linear
    beta_start: 0.0001
    beta_end: 0.02
    num_timesteps: 1000
    fast_ddpm: True
  sampling:
    fixed_initial_noise: True
    eta: 0.0
    timesteps: 10        # skip = num_time_steps // timesteps
    # beta_schedule_type: "uniform"                            Fast-DDPM
  optimizer:
    name: Adam
    args:
      lr: 0.00001
      betas: [0.5, 0.999]
  # grad_clip:
  #   clip: True
  #   max_norm: 1.0
  loss:
    name: MSELoss
    args:
      reduction: sum
      average_over_batch: True
  num_epochs: 50
  log_per_iteration: 50
  save_img_per_epoch: 1
  save_state_per_epoch: 1
  save_top_k: -1
  seed: 42
  float32_matmul_precision: "high"
  accelerator: "cuda"
  devices: [0]
  precision: "32-true"
  strategy: "ddp"
  output_dir: /home/mgj/workspace/mgjeon/image-to-image/results/sdo/diffusion/fast_ddpm
  resume_from: null